% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotDEGHeatmap-methods.R
\docType{methods}
\name{plotDEGHeatmap}
\alias{plotDEGHeatmap}
\alias{plotDEGHeatmap,DESeqResults-method}
\alias{plotDEGHeatmap,DESeqAnalysis-method}
\title{Plot Heatmap}
\usage{
\S4method{plotDEGHeatmap}{DESeqResults}(object, counts,
  direction = c("both", "up", "down"), clusteringMethod = "ward.D2",
  scale = "row", title = TRUE, interestingGroups = NULL,
  clusterRows = TRUE, clusterCols = TRUE, showRownames = FALSE,
  showColnames = TRUE, treeheightRow = 0L, treeheightCol = 50L,
  color = viridis::viridis, legendColor = viridis::viridis,
  borderColor = NULL, ...)

\S4method{plotDEGHeatmap}{DESeqAnalysis}(object, results, counts,
  direction = c("both", "up", "down"), clusteringMethod = "ward.D2",
  scale = "row", title = TRUE, interestingGroups = NULL,
  clusterRows = TRUE, clusterCols = TRUE, showRownames = FALSE,
  showColnames = TRUE, treeheightRow = 0L, treeheightCol = 50L,
  color = viridis::viridis, legendColor = viridis::viridis,
  borderColor = NULL, ...)
}
\arguments{
\item{object}{Object.}

\item{counts}{\code{DESeqTransform}.}

\item{direction}{\code{string}. Plot "\code{both}", "\code{up}", or "\code{down}" directions.}

\item{clusteringMethod}{\code{string}. Clustering method. Accepts the same values
as \code{\link[stats:hclust]{stats::hclust()}}.}

\item{scale}{\code{string}. Whether the values should be centered and scaled in
either the row or column direction ("\code{row}", "\code{column}"), or remain
unscaled ("\code{none}").}

\item{title}{\code{string} or \code{NULL}. Plot title.}

\item{interestingGroups}{\code{character} or \code{NULL}. Groups of interest that
define the samples. If left unset, defaults to \code{sampleName}.}

\item{clusterRows}{\code{boolean}. Arrange with hierarchical
clustering.}

\item{clusterCols}{\code{boolean}. Arrange with hierarchical
clustering.}

\item{showRownames}{\code{boolean}. Show row or column names.}

\item{showColnames}{\code{boolean}. Show row or column names.}

\item{treeheightRow}{\code{scalar integer}. Size of the row and
column dendrograms. Use \code{0} to disable.}

\item{treeheightCol}{\code{scalar integer}. Size of the row and
column dendrograms. Use \code{0} to disable.}

\item{color}{\code{function}, \code{character}, or \code{NULL}. Hexadecimal color function
or values to use for plot. We generally recommend these hexadecimal
functions from the viridis package:
\itemize{
\item \code{\link[viridis:viridis]{viridis::viridis()}} (\emph{default}).
\item \code{\link[viridis:inferno]{viridis::inferno()}}.
\item \code{\link[viridis:magma]{viridis::magma()}}.
\item \code{\link[viridis:plasma]{viridis::plasma()}}.
Alternatively, colors can be defined manually using hexadecimal values
(e.g. \code{c("#FF0000", "#0000FF")}), but this is not generally recommended.
Refer to the RColorBrewer package for hexadecimal color palettes that may
be suitable. If set \code{NULL}, will use the default pheatmap colors.
}}

\item{legendColor}{\code{function} or \code{NULL}. Hexadecimal color function to use
for legend labels. Note that hexadecimal values are not supported. If set
\code{NULL}, will use the default pheatmap colors.}

\item{borderColor}{\code{string} or \code{NULL}. Border color. Disabled by default for
improved aesthetics.}

\item{...}{Passthrough arguments to \code{\link[pheatmap:pheatmap]{pheatmap::pheatmap()}}. The names of the
arguments should be formatted in camel case, not snake case.}
}
\value{
\code{pheatmap}.
}
\description{
Construct a simple heatmap.
}
\section{Methods (by class)}{

\itemize{
\item \code{SummarizedExperiment}: Construct a correlation heatmap comparing the columns
of the matrix.

\item \code{SummarizedExperiment}: Scale the heatmap by applying quantile breaks.
}
}

\section{Hierarchical clustering}{



By default, row- and column-wise hierarchical clustering is performed using
the Ward method, but this behavior can be overrided by setting \code{clusterRows}
or \code{clusterCols} to \code{FALSE}.

}

\examples{
data(deseq)

## DESeqAnalysis ====
plotDEGHeatmap(deseq)

## DESeqResults ====
plotDEGHeatmap(
    object = as(deseq, "DESeqResults"),
    counts = as(deseq, "DESeqTransform")
)
}
\seealso{
\itemize{
\item \code{\link[pheatmap:pheatmap]{pheatmap::pheatmap()}}.
\item \code{\link[RColorBrewer:brewer.pal]{RColorBrewer::brewer.pal()}}.
}

\itemize{
\item \code{\link[pheatmap:pheatmap]{pheatmap::pheatmap()}}.
\item \code{\link[stats:cor]{stats::cor()}}.
\item \code{\link[stats:hclust]{stats::hclust()}}.
}
}
\author{
Michael Steinbaugh
}
