% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-methods.R
\docType{methods}
\name{export}
\alias{export}
\alias{export,DESeqResults-method}
\alias{export,DESeqResultsTables-method}
\title{Export}
\usage{
\S4method{export}{DESeqResults}(x, file, format, rowData = NULL,
  counts = NULL, sampleNames = NULL)

\S4method{export}{DESeqResultsTables}(x, dir = ".", compress = FALSE,
  dropbox = FALSE, rdsToken = NULL)
}
\arguments{
\item{x}{Object.}

\item{file}{\code{string}. File path.}

\item{format}{An optional character string containing the file format, which can be used to override the format inferred from \code{file} or, in lieu of specifying \code{file}, a file with the symbol name of \code{x} and the specified file extension will be created. Must specify \code{file} and/or \code{format}. Shortcuts include: \dQuote{,} (for comma-separated values), \dQuote{;} (for semicolon-separated values), \dQuote{|} (for pipe-separated values), and \dQuote{dump} for \code{\link[base]{dump}}.}

\item{rowData}{\code{DataFrame}. Row annotation data.}

\item{counts}{\code{matrix}. Normalized counts. DESeq2 size-factor normalized
counts or transcripts per million (TPM) are recommended.}

\item{sampleNames}{Named \code{character}. Human readable sample names. Only
applies when \code{counts} argument is defined. Names must correspond to
\code{colnames} of \code{counts} (these should be valid in R; see
\code{\link[base:make.names]{base::make.names()}} for details). Values will be remapped onto the counts
columns per sample in the exported file, and can contain non-alphanumeric
characters, hyphens, spaces, or start with a number.}

\item{dir}{\code{string}. Directory path.}

\item{compress}{\code{boolean}. Apply gzip compression to all files.}

\item{dropbox}{\code{boolean}. Export results to [Dropbox][] instead of local
storage. Recommended method by [HBC][] for permanent storage (e.g. [Stem
Cell Commons][]). When this option is enabled, unique links per file are
generated internally with \code{\link[bcbioBase:copyToDropbox]{bcbioBase::copyToDropbox()}}, which relies on the
[rdrop2][] package. Note that local files are written to \code{\link[base:tempdir]{base::tempdir()}}
when this option is enabled.}

\item{rdsToken}{\code{string} or \code{NULL}. RDS file token to use for Dropbox
authentication. If set \code{NULL} and \code{dropbox = TRUE} then an interactive
prompt will appear requesting authorization.}
}
\value{
Invisible \code{character}. File path(s).
}
\description{
Export data out of R and write to disk.
}
\details{
This is a wrapper for \code{rio::export()} that adds support for additional S4
classes in Bioconductor.
}
\section{Row names}{



The standard \code{rio::export()} call will drop rownames when exporting to CSV.
The \code{readr::write_*()} family of functions also never write rownames. This is
a \emph{really poor} default setting for handling genomic data, which often
contain gene identifiers in the rownames. Here we're performing any internal
tibble coercion step to ensure rownames are always moved to a "\code{rowname}"
column in the CSV export.

}

\examples{
data(deseq)

## DESeqResults ====
x <- as(deseq, "DESeqResults")
export(x, file = "example.csv")

## Clean up.
unlink("example.csv", recursive = TRUE)

## DESeqResultsTables ====
x <- DESeqResultsTables(deseq)
export(x, dir = "example")
list.files("example")

## Clean up.
unlink("example", recursive = TRUE)
}
\seealso{
\code{rio::export()}.
}
