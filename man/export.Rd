% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-methods.R
\docType{methods}
\name{export}
\alias{export}
\alias{export,DESeqAnalysis-method}
\title{Export}
\usage{
\S4method{export}{DESeqAnalysis}(x, name = NULL, dir = ".",
  compress = FALSE, humanize = FALSE)
}
\arguments{
\item{x}{\code{ANY}.
An object supporting \code{dim} to be written to disk.}

\item{name}{\code{character(1)}.
Name to use on disk. If \code{NULL}, will use the name of the object instead.}

\item{dir}{\code{character(1)}.
Directory path.}

\item{compress}{\code{logical(1)}.
Apply gzip compression to all files.}

\item{humanize}{\code{logical(1)}.
Automatically convert gene IDs to gene symbols in the \code{rownames} and sample
IDs to sample names in the \code{colnames}.}
}
\value{
Invisible \code{character}.
File path(s).
}
\description{
Export data out of R and write to disk.
}
\details{
This is a wrapper for \code{rio::export} that adds support for additional S4
classes in Bioconductor.
}
\section{Row names}{



The standard \code{rio::export} call will drop rownames when exporting to CSV. The
readr family of functions also never write rownames. This is a \emph{really poor}
default setting for handling genomic data, which often contain gene
identifiers in the rownames. Here we're performing any internal tibble
coercion step to ensure rownames are always moved to a "\code{rowname}" column in
the CSV export.

}

\examples{
data(deseq)

## DESeqAnalysis ====
export(deseq, dir = "example")
}
\seealso{
\code{rio::export}.
}
